# -*- coding: utf-8 -*-
"""hashing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OyRN_Z78-Sl1qen_4M15AUb9_Ste21BH
"""

import hashlib

class Block:
    def __init__(self, previous_hash, data):
        self.previous_hash = previous_hash
        self.data = data
        self.nonce = 0
        self.hash = None

    def compute_hash(self):
        block_string = f"{self.previous_hash}{self.data}{self.nonce}"
        return hashlib.sha256(block_string.encode()).hexdigest()

    def mine_block(self, difficulty):
        prefix = '0' * difficulty
        while True:
            self.hash = self.compute_hash()
            if self.hash.startswith(prefix):
                break
            self.nonce += 1

# Example usage:
genesis_hash = "0" * 64  # Genesis block previous hash

block_t = Block(genesis_hash, "Data for Block t")
block_t.mine_block(difficulty=4)
print("Block t hash:", block_t.hash)

# Now build Block t+1 using hash(Block t)
block_t_plus_1 = Block(block_t.hash, "Data for Block t+1")
block_t_plus_1.mine_block(difficulty=4)
print("Block t+1 hash:", block_t_plus_1.hash)